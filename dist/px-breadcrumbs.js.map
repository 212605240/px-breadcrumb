{"version":3,"sources":["px-breadcrumbs.es6.js"],"names":["Polymer","is","properties","breadcrumbData","type","Array","value","mainPathItems","computed","_clickItem","Object","_clickedItemChildren","_isDropdownHidden","Boolean","_computeMainPath","currentDataObj","console","log","pathArray","recursiveLoopThroughObj","pathItem","i","length","children","push","selectedItem","_doesItemHaveChildren","itemInPath","hasChildren","_isNotLastItemInData","index","_calculatePathclass","_onPathTap","evt","dataItem","model","item","set","calculateDropdownPosition","clickedItem","changeDropdownPosition","positioning","_notifyClick","dispatchEvent","CustomEvent","composed"],"mappings":"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","file":"px-breadcrumbs.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'px-breadcrumbs', \n\n    properties: {\n      /**\n       * This array receives/holds the data that will be transformed into the breadcrumbs.\n       */\n      breadcrumbData: {\n        type: Array,\n        value: function() {return [];}\n      },\n      mainPathItems: {\n        type: Array,\n        value: function() {return [];},\n        computed: '_computeMainPath(breadcrumbData)'\n      },\n      _clickItem: {\n        type: Object,\n        value: function() {return {};}\n      },\n      _clickedItemChildren: {\n        type: Array,\n        value: function() {return [];},\n        \n      },\n      _isDropdownHidden: {\n        type: Boolean,\n        value: true\n      }\n    },\n    _computeMainPath(currentDataObj) {\n      console.log(currentDataObj);\n      var pathArray = [];\n      // if (currentDataObj.children) {\n      //   PathArray.push(currentDataObj)\n      // }\n      var recursiveLoopThroughObj = function(pathItem) {\n        console.log(pathItem);\n        for (var i=0; i<pathItem.length;i++) {\n          debugger;\n          if (pathItem[i].children) {\n            pathArray.push(pathItem[i]);\n            recursiveLoopThroughObj(pathItem[i].children)\n          } else {\n            if (pathItem[i].selectedItem) {\n              pathArray.push(pathItem[i]);\n            }\n          }\n        }\n      };\n      recursiveLoopThroughObj(currentDataObj);\n      console.log('pathArray');\n      console.log(pathArray);\n      return pathArray;\n    },\n    /**\n     * This function checks whether the item in question has children.\n     * @param {*} itemInPath \n     */\n    _doesItemHaveChildren(itemInPath) {\n      return itemInPath.hasChildren;\n    },\n    /**\n     * This function is used to determine whether we are on the last Item in the array. - if \n     * the index is the last item in the aray (length -1), we return false.\n     * @param {*} index \n     */\n    _isNotLastItemInData(index) {\n      return this.mainPathItems.length-1 !== index;\n    },\n    /**\n     * This function is used to determine the correct classes that need to be passed in - if \n     * the index is the last item in the aray, we want it to be bold, so we pass the selected class.\n     * \n     * @param {*} index This represents the index of the item we are looking at in the array.\n     */\n    _calculatePathclass(index) {\n      return !this._isNotLastItemInData(index) ?  ' selected' : '';\n    },\n    _onPathTap(evt) {\n      var dataItem = evt.model.item;\n      // on tap, we need to:\n      // 0. find out if the clicked item is the same as before.\n      // if it is, we make the dropdown go way.\n      //if it is not, we save the new clicked item.\n      console.log(this._clickItem === evt.model.item);\n      if (this._clickItem === evt.model.item) {\n        this.set('_isDropdownHidden', true);\n        this.set('_clickItem', {});\n      } else {\n        this.set('_clickItem', dataItem);\n        this.set('_isDropdownHidden', false);\n      }\n      \n      // 1. Check if there are children. \n        console.log(evt.model.item);\n\n        if (this._doesItemHaveChildren(dataItem)) {\n          this.set('_clickedItemChildren', dataItem.children);\n          console.log('set children ');\n          console.log(dataItem.children);\n        }\n        // a. If there are kids, we need to update clickedItemChildren. \n        // b. If not, we fire an event that the clicked on item is the selected context.\n      // 2. If there are children, we need to find the left/top/height of the clicked item, and calculate the positioning of the dropdown accordingly \n    },\n    \n    /**\n     * \n     * @param {Object} clickedItem the clicked item\n     * @return Object that holds the calculated top/left for the dropdown.\n     */\n    calculateDropdownPosition(clickedItem) {\n      //TODO extract top/left/height from clickedItem.\n      // then, calculate the new positioning, and save it into an object.\n      // returns an object that holds the new top/left positioning.\n    },\n    /**\n     * \n     * @param {Object} positioning an object which holds the new positioning for the dropdown\n     */\n    changeDropdownPosition(positioning) {\n      //TODO find out if we are hitting the window edge. \n      //if we aren't, change the position of the dropdown to be under the clicked item\n      //if we are, have smart positioning, \n    },\n    /**\n     * This method dispatches a custom event ('px-breadcrumbs-item-clicked') that has the item attached to it.\n     * the 'composed: true' property makes it so the event passes through shadow dom boundaries.\n     * @param {*} item the item that was clicked on.\n     */\n    _notifyClick(item) {\n      //TODO fire an event with the clicked on item.\n      this.dispatchEvent(new CustomEvent('px-breadcrumbs-item-clicked', {item: item, composed: true}));\n    }\n  });\n})();\n"]}